.s-widget {
    @s-widget-content-padding: @su-16 - 1px; // subtract 1px for border
    @s-widget-content-inner-spacing: @su-12; // the spacing between two adjacent simple items
    @s-widget-content-outer-spacing: @su-16; // the spacing at the start/end of a group of simple items, as well as between a complex item and its separator line

    @s-widget-outer-border-color: @black-100;
    @s-widget-content-separator-color: @black-075;
    @s-widget-header-background-color: @black-025;

    @s-widget-outer-border-color-blue: @powder-200;
    @s-widget-content-separator-color-blue: @powder-200;
    @s-widget-header-background-color-blue: darken(@powder,5%); // would be @powder-150 if that existed
    @s-widget-content-background-color-blue: @powder-100;

    @s-widget-outer-border-color-yellow: @yellow-300;
    @s-widget-content-separator-color-yellow: @yellow-300;
    @s-widget-header-background-color-yellow: darken(@yellow,5%); // would be @yellow-150 if that existed
    @s-widget-content-background-color-yellow: @yellow-100;

    @s-widget-outer-border-color-green: @forest-300;
    @s-widget-content-separator-color-green: @forest-200;
    @s-widget-header-background-color-green: lighten(@forest,35%); // would be @forest-150 if that existed
    @s-widget-content-background-color-green: @forest-100;


    
    border: 1px solid @s-widget-outer-border-color;
    border-radius: @br-2;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    font-size: 13px; // TODO: 13px isn't in our size list
    overflow: hidden;
    
    a, a:visited {
        color: @black-500;
    }
    
    .-header, .-content {
        display: block;
    }
    
    .-header {
        font-size: 15px; // TODO: 15px isn't in our size list
        font-weight: normal;
        color: @black-500;
        padding: @su-12 @su-16;
        background: @s-widget-header-background-color;
        border-bottom: 1px solid @s-widget-content-separator-color;
        
        &._alternate-small-bold {
            font-size: @fs-12;
            font-weight: bold;
        }
        
    }
    .-content + .-header {
        // TODO: handle the collapsed case
        border-top: 1px solid @s-widget-content-separator-color;

        // This will collapse with the previous content element's bottom margin.
        // In particular this means this relies on the fact that the outer spacing
        // is larger than the inner spacing.
        margin-top: @s-widget-content-outer-spacing;
    }

    .-header + .-content, .-content:first-child { // (1)
        margin-top: @s-widget-content-outer-spacing;
    }
    .-content:last-child {
        margin-bottom: @s-widget-content-outer-spacing;
    }    
    
    &._complex-items {

        // In a complex widget, we must support things like collapsible (in particular invisble)
        // elements. Therefore we cannot rely on things like :first-child, because the *first*
        // child may not be the first *visible* child. This is why in a complex widget, every
        // header and item has a border-top. But because you shouldn't see the first visible
        // item's or header's top border (the widget itself provides for that border), we shift
        // everything up by one pixel with the following pseudo-element.
        &:before {
            content: '';
            display: block;
            margin-top: -1px;
        }

        .-content {
            border-top: 1px solid @s-widget-content-separator-color;
            padding-top: @s-widget-content-outer-spacing;
            padding-bottom: @s-widget-content-outer-spacing;
            margin: 0;
        }
        .-header {
            border-bottom: none; // in a ._complex-items widget, the items provide the border
            border-top: 1px solid @s-widget-content-separator-color;
            &._collapsing-control {
                cursor: pointer;
                &:before {
                    content: '';
                    float: right;
                    border: 5px solid transparent;
                    border-bottom-width: 0;
                    border-top-color: @black-200;
                    margin-top: ~"calc(1.3em / 2 - 2.5px)"; // 1.3 is our standard line height
                    transition: transform 0.3s cubic-bezier(0.4, 0.4, 0.6, 1), transform-origin 0.3s cubic-bezier(0.4, 0.4, 0.6, 1);
                    transform-origin: center 300%;
                }
                &[aria-expanded='true']:before {
                    transform: scaleY(-1);
                    transform-origin: center center;
                }
            }
        }
        .-content + .-header {
            margin-top: 0;
        }
    }
    .-content {
        
        position: relative; //TODO comment (or move to parent?)
        
        & {
            margin-bottom: @s-widget-content-inner-spacing;
            // note that the first content element after a header (or if there's no header at all)
            // also needs a top margin; this is handled further above (see "(1)")
        }
        padding: 0 @s-widget-content-padding;
        
        &.is-current {
            &:before {
                content: '';
                position: absolute;
                height: ~"calc(100% +" @s-widget-content-inner-spacing ~")";
                left: 0;
                border-left: 3px solid @orange;
                margin-left: -1px; // the orange selection indicator overlaps with the widget border
                margin-top: -@s-widget-content-inner-spacing/2;
            }
            font-weight: bold;
        }
    }
    
    // see http://stackoverflow.com/a/43965099 for how this works:
    // TODO: this is very generic, so it probably shouldn't just be used for s-widget
    .-collapsible-group-wrapper {
        display: flex;
        overflow: hidden;
        &:after {
            content: '';
            height: 50px;
            transition: height 0.3s linear, max-height 0s 0.3s linear;
            max-height: 0px;
            flex-basis: 0;
        }
        .-collapsible-group {
            transition: margin-bottom 0.3s cubic-bezier(0, 0, 0, 1);
            margin-bottom: 0;
            max-height: 1000000px;            
            flex-basis: 100%;
        }
        &.is-collapsed {
            .-collapsible-group {
                margin-bottom: -1500px;
                transition: margin-bottom 0.3s cubic-bezier(1, 0, 1, 1),
                            visibility 0s 0.3s, max-height 0s 0.3s;
                visibility: hidden;
                max-height: 0;                
            }
            &:after {
                height: 0;
                transition: height 0.3s linear;
                max-height: 50px;
            }
        }
    }
    
    // COLOR ALTERNATIVES
    // todo: use CSS custom properties for this once we don't care about IE anymore
    &._alternate-blue {
        border-color: @s-widget-outer-border-color-blue;
        background-color: @s-widget-content-background-color-blue;
        &._complex-items .-content {
            border-color: @s-widget-content-separator-color-blue;
        }
        .-header, .-content + .-header {
            border-color: @s-widget-content-separator-color-blue;
            background-color: @s-widget-header-background-color-blue;
        }
    }
    
    &._alternate-yellow {
        border-color: @s-widget-outer-border-color-yellow;
        background-color: @s-widget-content-background-color-yellow;
        &._complex-items .-content {
            border-color: @s-widget-content-separator-color-yellow;
        }
        .-header, .-content + .-header {
            border-color: @s-widget-content-separator-color-yellow;
            background-color: @s-widget-header-background-color-yellow;
        }
    }    
    
    &._alternate-green {
        border-color: @s-widget-outer-border-color-green;
        background-color: @s-widget-content-background-color-green;
        &._complex-items .-content {
            border-color: @s-widget-content-separator-color-green;
        }
        .-header, .-content + .-header {
            border-color: @s-widget-content-separator-color-green;
            background-color: @s-widget-header-background-color-green;
        }
    }        
    
    
    &:not(._complex-items) > :not(.-content):not(.-header) {
        .stacks-error('All children of a non-complex .s-widget must be .-content or .-header.');
    }
    
}