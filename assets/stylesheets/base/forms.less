//
//  STACK OVERFLOW
//  FORMS
//
//  TABLE OF CONTENTS
//  • UNIVERSAL PROPERTIES
//    - Layout
//    - Font Styles
//  • Inputs
//    - Base Style
//    - Interaction States
//    - Textareas
//    - Select Menus
//    - File Upload
//    - Checkboxes & Radios
//  • LABELS
//    - Base Style
//    - Style Modifications
//    - Status Flag
//  • TYPE STYLES
//  • LABELS
//
//  ============================================================================
//  $   UNIVERSAL PROPERTIES
//      These are properties which are universally applied to the various
//      form elements.
//  ----------------------------------------------------------------------------
//  $$  FONT STYLES
//  ----------------------------------------------------------------------------
.label,
.input,
.select > select {
  font-size: @fs-13;
  line-height: @lh-6;
  color: @fc-dark;
}


//  ============================================================================
//  $  INPUTS
//  ============================================================================
//  $$  BASE STYLE
//  ----------------------------------------------------------------------------
.input {
  padding: @su-8 @su-12;
  border: 1px solid @black-150;
  border-radius: 0;
  box-shadow: inset 0 0 1px fade(@black-350,20%), 0 0 0 fade(@white,0%);
  background-color: @white;
  transition: all 600ms @te-smooth;

  //  --  PLACEHOLDER
  //  --------------------------------------------------------------------------
  &::-webkit-input-placeholder {
    color: @black-150;
  }
  &::-moz-placeholder { // FF 18+
    color: @black-150;
    opacity: 1; // yeap, we need that for firefox
  }
  &:-ms-input-placeholder { // IE
    color: @black-150;
  }
  &::-ms-input-placeholder { // Edge
    color: @black-150;
  }
  &::placeholder {
    color: @black-150;
  }
}

//  $$  STATES
//      The many states for inputs and select menus.
//  ----------------------------------------------------------------------------
.input,
.select > select {
  //  Hover
  &:hover {
    border-color: fade(@blue-500,50%);
    box-shadow: inset 0 0 2px @black-150, 0 0 2px fade(@blue-500,70%);
  }

  //  Focus
  &:focus {
    outline: 0;
    border-color: @blue-500;
    box-shadow: inset 0 0 4px @black-050, 0 0 8px fade(@blue-500,50%);
  }

  //  Disabled, Read-only
  &[disabled],
  &[read-only] {
    border-color: @brc-lighter;
    box-shadow: inset 0 0 2px fade(@black-350,10%);
    background-color: @bgc-lightest;
    color: @fc-light;

    &:hover {
      border-color: @brc-lightest;
      box-shadow: none;
    }
  }

  //  Disabled
  &[disabled] {
    background-image: url("../../Img/forms/icon-disabled.svg");
    background-repeat: no-repeat;
    background-position: right @su-12 center;
    cursor: not-allowed;
  }
}

//  $$  CONNECTED INPUTS
//      To visually connect inputs together
//  ----------------------------------------------------------------------------
.input-connect {
  padding: @su-8 @su-12;
  line-height: @lh-6;

  //  When we want the gray background
  &._fill {
    border: 1px solid @black-150;
    border-left-width: 0;
    border-right-width: 0;
    background-color: @bgc-lightest;
    color: @fc-medium;

    &._first {
      border-left-width: 1px;
    }
    &._last {
      border-right-width: 1px;
    }
  }

  //  If we want to connect a button that's last, don't round all the corners
  &.button._last {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  //  Make labels white-space
  .label {
    white-space: nowrap;
  }
}

//  --  FORM VALIDATION STATES
//      Validation states will need applied at the wrapping container level.
//  ----------------------------------------------------------------------------
.grid-box {
  //  Universal styles
  &.has-warning,
  &.has-error,
  &.is-success {
    .input,
    .select > select {
      background-position: right @su-12 center;
      background-repeat: no-repeat;
    }
    .select > select {
      background-position: right @su-24 center;
    }
  }

  //  --  WARNING
  &.has-warning {
    .input,
    .select > select {
      border-color: mix(@yellow-500,@orange-600);
      background-image: url("../../Img/forms/icon-warning.svg"), none;

      &:hover {
        border-color: lighten(mix(@yellow-500,@orange-600),10%);
        box-shadow: inset 0 0 1px @black-100, 0 0 2px @yellow-200;
      }
      &:focus {
        border-color: saturate(mix(@yellow-500,@orange-600),10%);
        box-shadow: inset 0 0 4px @black-050, 0 0 4px @yellow-200;
      }
    }

    .-message {
      color: darken(saturate(mix(@yellow-500,@orange-600),120%),10%);
    }
  }

  //  --  ERROR
  &.has-error {
    .input,
    .select > select {
      border-color: @red-400;
      background-image: url("../../Img/forms/icon-error.svg"), none;

      &:hover {
        border-color: @red-300;
        box-shadow: inset 0 0 1px @black-100, 0 0 2px @red-100;
      }
      &:focus {
        border-color: @red-500;
        box-shadow: inset 0 0 4px @black-050, 0 0 4px @red-200;
      }
    }

    .-message {
      color: @red-500;
    }
  }

  //  --  SUCCESS
  &.is-success {
    .input,
    .select select {
      border-color: @green-400;
      background-image: url("../../Img/forms/icon-success.svg"), none;

      &:hover {
        border-color: @green-300;
        box-shadow: inset 0 0 1px @black-100, 0 0 2px @green-100;
      }
      &:focus {
        border-color: @green-500;
        box-shadow: inset 0 0 4px @black-050, 0 0 4px @green-200;
      }
    }

    .-message {
      color: darken(@green-500,5%);
    }
  }

  //  --  DISABLED
  &.is-disabled {
    opacity: 0.75;
    cursor: not-allowed;

    .select > select {
      &:before,
      &:after { opacity: 0.3; }
    }
  }
}


//  $$  TEXTAREAS
//  ----------------------------------------------------------------------------
.input._textarea {
  padding-top: @su-12;
  padding-bottom: @su-12;
  height: auto;
  resize: vertical;
}

//  $$  SELECT MENUS
//  ----------------------------------------------------------------------------
.select {
  position: relative;

  //  --  MENU ARROWS
  //      To customize the visual appearance of the select menu arrows, we need
  //      to recreate them on the wrapping .select div.
  //  --------------------------------------------------------------------------
  &:before,
  &:after {
    content: "";
    position: absolute;
    right: @su-12;
    pointer-events: none;

    border-width: 3px;
    border-style: solid;
    border-color: @black-700 transparent;
  }
  &:before {
    top: calc(~"50% - 6px");
    border-top-width: 0;
    border-bottom-width: 5px;
  }
  &:after {
    top: calc(~"50% + 1px");
    border-top-width: 5px;
    border-bottom-width: 0;
  }

  //  --  MENU
  //      Now we can style the visual appearance of the select menu;
  //  --------------------------------------------------------------------------
  > select {
    //  [1] Reset the appearance
    .appearance(none);

    //  [2] Update the styles
    padding: @su-8 @su-32 @su-8 @su-12;
    width: 100%;
    border-radius: @br-2;
    border: 1px solid @black-150;
    background-color: @white;
    transition: border-color 300ms @te-smooth, box-shadow 300ms @te-smooth, background-color 300ms @te-smooth;
  }
}

//  $$  FILE UPLOAD
//  ----------------------------------------------------------------------------
.input._file {
  display: block;
  margin: 0;
  padding: @su-8 0;
  font-size: @fs-11;
}

//  $$  CHECKBOXES & RADIOS
//  ----------------------------------------------------------------------------
//  --  Variables
@input-ch-rd-focus:           0 0 2em/13 1px fade(@input-ch-rd-bgc-blue, 50%);
@input-ch-rd-hover:           0 0 2em/13 1px fade(@input-ch-rd-bgc-blue, 70%);
@input-ch-rd-bgc-blue:        @blue-500;
@input-ch-rd-gray:            inset 0 0 0 1px @brc-dark;
@input-ch-rd-blue:            inset 0 0 0 1px @input-ch-rd-bgc-blue;
@input-ch-rd-blue_light:      inset 0 0 0 1px fade(@input-ch-rd-bgc-blue,50%);
@input-ch-rd-white:           inset 0 0 0 3px @white;
@input-ch-rd-clear:           0 0 0 0 fade(@white,0%);

.checkbox,
.radio {
  //  [1]   Check to see if we can use custom styles, if so reset the defaults
  //  --------------------------------------------------------------------------
  @supports (appearance: none) or (-webkit-appearance: none) {
    .appearance(none);

    &::-ms-check {
      display: none;
    }

    //  [2]  Now re-style the checkboxes and radios
    //  ------------------------------------------------------------------------
    width: @su-16 - 3;
    height: @su-16 - 3;
    background-color: @white;
    transition: background-color 300ms @te-smooth, border-radius 300ms @te-smooth, box-shadow 300ms @te-smooth;
    outline: 0;
    cursor: pointer;

    &:focus {
      outline: 0;
    }

    //  Sizes
    &._sm {
      width: @su-12;
      height: @su-12;
    }
    &._md {
      width: @su-16;
      height: @su-16;
    }
    &._lg {
      width: @su-16 + 3;
      height: @su-16 + 3;
    }
    &._xl {
      width: @su-24;
      height: @su-24;
    }
  }
}

//  --   Checkboxes
//  ----------------------------------------------------------------------------
.checkbox {
  @supports (appearance: none) or (-webkit-appearance: none) {
    border-radius: 0;
    box-shadow: @input-ch-rd-clear, @input-ch-rd-gray;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: contain;

    &:checked {
      border-radius: @br-2 / 1;
      box-shadow: @input-ch-rd-blue;
      background-color: @input-ch-rd-bgc-blue;
      background-image: url("data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20width%3D%2212%22%20height%3D%2212%22%20version%3D%221.1%22%20viewBox%3D%220%200%203.1749997%203.175%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cg%20transform%3D%22translate(-61.232%20-118.44)%22%3E%3Cpath%20d%3D%22m63.682%20119.01-1.1328%201.5957-0.63477-0.45117-0.21094%200.29687%200.93164%200.66211%201.3438-1.8906z%22%20fill%3D%22%23fff%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E");

      &:hover {
        box-shadow: @input-ch-rd-hover;
        background-color: darken(@input-ch-rd-bgc-blue,5%);
      }
    }

    &:hover {
      box-shadow: @input-ch-rd-hover, @input-ch-rd-blue_light;
      background-color: fade(@input-ch-rd-bgc-blue,10%);
    }

    &:active {
      box-shadow: @input-ch-rd-blue;
      background-color: fade(@input-ch-rd-bgc-blue,50%);
    }

    &:focus {
      box-shadow: @input-ch-rd-focus, @input-ch-rd-gray;

      &:checked,
      &:active {
        box-shadow: @input-ch-rd-focus;
      }
      &:active {
        box-shadow: @input-ch-rd-focus, @input-ch-rd-blue;
      }
    }
  }
}

//  --   Radio Selects
//  ----------------------------------------------------------------------------
.radio {
  @supports (appearance: none) or (-webkit-appearance: none) {
    border-radius: @br-circle;
    box-shadow: @input-ch-rd-clear, @input-ch-rd-gray, @input-ch-rd-white;

    &:checked {
      box-shadow: @input-ch-rd-clear, @input-ch-rd-blue, @input-ch-rd-white;
      background-color: @input-ch-rd-bgc-blue;

      &:hover {
        box-shadow: @input-ch-rd-hover, @input-ch-rd-blue, @input-ch-rd-white;
        background-color: darken(@input-ch-rd-bgc-blue,5%);
      }
    }

    &:hover {
      box-shadow: @input-ch-rd-hover, @input-ch-rd-blue_light, @input-ch-rd-white;
      background-color: fade(@input-ch-rd-bgc-blue,10%);
    }

    &:active {
      box-shadow: @input-ch-rd-clear, @input-ch-rd-blue, @input-ch-rd-white;
      background-color: fade(@input-ch-rd-bgc-blue,50%);
    }

    &:focus {
      box-shadow: @input-ch-rd-focus, @input-ch-rd-gray, @input-ch-rd-white;

      &:checked,
      &:active {
        box-shadow: @input-ch-rd-focus, @input-ch-rd-blue, @input-ch-rd-white;
      }
    }
  }
}


//  ============================================================================
//  $  LABELS
//  ============================================================================
.label {
  font-weight: 700;
  cursor: pointer;

  //  $$  STYLE MODIFICATIONS
  //  --------------------------------------------------------------------------
  &._muted {
    color: @fc-light;
  }

  //  $$  LABEL STATUS FLAG
  //  ----------------------------------------------------------------------------
  //      Is this form item required or optional? Flag the status for users.
  //      Default styling is optional.
  > .-status {
    font-size: 85%;
    font-style: italic;
    font-weight: 400;
    color: @fc-medium;

    &._required {
      color: @red-400;
    }
  }
}


//  ============================================================================
//  $ TYPE STYLES
//  ----------------------------------------------------------------------------
.input-description {
  font-size: @fs-13;
  color: @fc-light;
  line-height: @lh-4;
}


//  ============================================================================
//  $ OPTION TOGGLE
//  ----------------------------------------------------------------------------
.option-toggle {
  //  First hide the radio buttons
  .radio {
    position: absolute;
    left: -999em;
    opacity: 0;
  }

  //  Next modifictions to option cells
  .-option {
    margin-left: -1px;
    margin-right: -1px;

    //  Round the corners on the first and last elements
    &:first-of-type .label {
      border-radius: @su-2 0 0 @su-2;
    }
    &:last-of-type .label {
      border-radius: 0 @su-2 @su-2 0;
    }
  }

  //  Style the base label
  .label {
    padding: @su-8 @su-12;
    border: 1px solid @brc-light;
    background-color: @white;
    color: @fc-medium;
    transition: all 300ms @te-smooth;
    cursor: pointer;

    &:hover,
    &:active {
      color: @fc-dark;
      box-shadow: 0 0 8px fade(@powder-600,25%);
      background-color: @powder-025;
      border-color: @brc-dark;
      z-index: 1;
    }
  }

  //  If the label is selected, style it accordingly.
  .radio:checked + .label {
    z-index: 2;
    border-color: @powder-200;
    box-shadow: 0 0 8px fade(@powder-600,10%);
    background-color: @powder-100;
    color: @powder-700;

    &:hover,
    &:active {
      box-shadow: 0 0 8px fade(@powder-600,25%);
      border-color: darken(@powder-200,5%);
      background-color: darken(@powder-100,5%);
      color: @powder-800;
    }
  }

  //  $$  MODIFICATIONS
  //  --------------------------------------------------------------------------
  //  --  Primary
  //      When the toggle is the only one within a view and we want it to be
  //      visually dominating for the user.
  &._primary {
    .label:hover,
    .label:active {
      color: @blue-700;
      box-shadow: 0 0 8px fade(@blue-500,25%);
      background-color: @blue-050;
    }

    .radio:checked + .label {
      border-color: @blue-600;
      box-shadow: 0 0 8px fade(@blue-500,10%);
      background-color: @blue-500;
      color: @white;

      &:hover,
      &:active {
        border-color: @blue-700;
        box-shadow: 0 0 8px fade(@blue-500,25%);
        background-color: @blue-600;
        color: @blue-050;
      }
    }
  }

  //  --  Switch
  //      Used when the toggle represents an "on/off" choice for the user. A
  //      "off" state must be present to use this modifier.
  &._switch {
    .label:hover,
    .label:active {
      border-color: @brc-dark;
      box-shadow: 0 0 8px fade(@black-600,25%);
      background-color: @bgc-lightest;
    }

    .radio:checked + .label {
      &:not(._off) {
        border-color: @green-400;
        box-shadow: 0 0 8px fade(@green-400,10%);
        background-color: @green-400;
        color: @white;

        &:hover,
        &:active {
          border-color: @green-500;
          box-shadow: 0 0 8px fade(@green-400,25%);
          background-color: @green-500;
          color: @green-050;
        }
      }

      //  When the off state is selected, we don't it green. We want it to be
      //  gray instead.
      &._off {
        border-color: @brc-dark;
        box-shadow: 0 0 8px fade(@black-800,10%);
        background-color: @bgc-light;
        color: @fc-dark;

        &:hover,
        &:active {
          border-color: @brc-darker;
          box-shadow: 0 0 8px fade(@black-800,25%);
          background-color: @bgc-dark;
          color: darken(@fc-dark,5%);
        }
      }
    }
  }
}

//  ============================================================================
//  $ Chosen plugin (JS plugin)
//  ----------------------------------------------------------------------------
.container .chosen-container {
    margin-top: 0;

    &.chosen-container-active {
        border-width: 0;
        .chosen-choices {
            border-color: @blue-500;
            box-shadow: inset 0 0 4px @black-050, 0 0 5px fade(@blue-500,50%);
        }
    }

    .chosen-choices {
        //.flexbox();
        padding: 0 1px;
        min-height: 38px;
        background-image: none;
        border-radius: @br-2;
        border-color: @brc-light;

        &:hover {
            border-color: fade(@blue-500,50%);
            box-shadow: inset 0 0 2px darken(@black-050,10%), 0 0 2px fade(fade(@blue-500,50%),20%);
        }
    }

    //  Restyle tags
    .chosen-choices {
        li.search-choice,
        li.search-field {
            display: inline-flex;
            align-items: center;
            margin: @su-4 1px;
            padding: @su-2 (@su-4 + 2);
        }
        li.search-choice {
            float: none;
            box-shadow: none;
            background-image: none;

            font-family: @ff-sans;
            font-size: @fs-12;
            color: @powder-600;
            background-color: @powder-100;
            border-color: transparent;
            border-radius: @br-2;

            &:first-child { margin-left: 3px; }

            .search-choice-close {
                position: relative;
                top: 0;
                right: -1px;
                margin-left: @su-4;
                transition: none;
            }
        }
    }
     li.search-field > input[type="text"] {
        padding: 0;
        margin: 0;
    }
}
