//
//  STACK OVERFLOW
//  BUTTONS
//
//  TABLE OF CONTENTS
//  • BASE STYLE
//  • STYLE MODIFICATIONS
//  • LAYOUTS & SIZES
//
//  ============================================================================
//  $   STYLE MIXINS
//      Within each community theme, we allow buttons styles to be modified.
//      The attributes that we allow people to modify are:
//
//      Attribute                 Variable                Default
//      ---                       ---                     ---
//      Font Weight               @btn-fw                 400
//      Font Color                @btn-fc                 @link-color
//      Background Color          @btn-bgc                fade(@btn-fc,0%)
//      Background Image          @btn-bgg                false
//      Border Color              @btn-brc                false
//      Border Radius             @btn-br                 @br-2
//      Box Shadow Inset Color    @btn-bxis               false
//      Box Shadow Color          @btn-bxos               @blue-500;
//
//      Some of these properties are true or false statements. To provide the
//      fullest flexibility, we've created a number of mixins which check
//      if different attributes are present.
//
//      MIXIN:
//      Box Shadow Inset Color
//
//      HOW IT WORKS:
//      What happens is when the mixin is invoked, we do a quick check to see
//      if we're allowing inset borders within buttons (@btn-bxis). This is a
//      true/false statement. If TRUE, we add in the variable you pass into
//      the mixin (@bxis). If @btn-bxis is FALSE, add only the outer box shadow.
//  ----------------------------------------------------------------------------
.btn-check-bxs(@bxis,@bxos) {
  & when (@btn-bxis = true) {
    box-shadow: inset 0 1px 0 0 lighten(@bxis,20%), 0 0 0 0 fade(@btn-bxos,0%);

    &:hover {
      box-shadow: inset 0 1px 0 0 lighten(@bxis,10%), 0 0 8px 0 fade(@btn-bxos,30%);
    }
    &:focus {
      box-shadow: inset 0 1px 0 0 lighten(@bxis,10%), 0 0 12px 0 fade(@btn-bxos,50%);
    }
    &[disabled] {
      box-shadow: none;
    }
  }

  & when (@btn-bxis = false) {
    box-shadow: 0 0 0 0 fade(@bxos,0%);

    &:hover {
      box-shadow: 0 0 8px 0 fade(@bxos,30%);
    }
    &:focus {
      box-shadow: 0 0 12px 0 fade(@bxos,50%);
    }
    &[disabled] {
      box-shadow: none;
    }
  }
}

//      MIXIN:
//      Border Color
//
//      HOW IT WORKS:
//      Using a mixin guard we check to see if it's true. The way we determine
//      this by checking if the @brc value IS NOT false. If it's any other value
//      besides false, we apply the border color values. If @brc equals FALSE,
//      then the border color is transparent.
//  ----------------------------------------------------------------------------
.btn-check-brc(@brc: @btn-brc) when not (@brc = false) {
  border-color: darken(@brc,10%);

  &:hover {
    border-color: darken(@brc,15%);
  }
  &:focus {
    border-color: darken(@brc,20%);
  }
  &[disabled] {
    border-color: fade(desaturate(@brc,75%),40%);
  }
}

//      MIXIN:
//      Background Image
//
//      HOW IT WORKS:
//      Using a mixin guard we check to see if @btn-bgg is true or false. If
//      true, then we add in a background image.
//  ----------------------------------------------------------------------------
.btn-check-bgg(@bgg, @bgc) when (@btn-bgg = true) {
  background-image: linear-gradient(to bottom, @bgg 0%, @bgc 100%);
}

//      MIXIN:
//      Background Color
//
//      HOW IT WORKS:
//      Using a mixin guard we check to see what the alpha level is. If the
//      level equals 0, we slightly fade in the background color on hover and
//      focus. If the alpha level is greater than 0, then we darken the
//      background color.
//  ----------------------------------------------------------------------------
.btn-bgc(@bgc) {
  background-color: @bgc;

  & when (alpha(@bgc) = 0) {
    &:hover {
      background-color: fade(spin(saturate(@bgc,5%),5),5%);
    }
    &:focus {
      background-color: fade(spin(saturate(@bgc,15%),10),10%);
    }
    &[disabled] {
      background-color: fade(desaturate(@bgc,90%),20%);
    }
  }

  & when (alpha(@bgc) > 0) {
    &:hover {
      background-color: spin(saturate(@bgc,5%),5);
    }
    &:focus {
      background-color: spin(saturate(@bgc,15%),10);
    }
    &[disabled] {
      background-color: fade(desaturate(@bgc,75%),50%);
    }
  }
}

//      MIXIN:
//      Font Color
//
//      HOW IT WORKS:
//      Using a mixin guard we check to see if the color is white. When it is
//      white, we fadeout the link color. When it isn't white, we darken
//      the font color instead.
//  ----------------------------------------------------------------------------
.btn-fc(@fc) {
  color: @fc;

  & when (@fc = #FFFFFF) {
    &:hover,
    &:focus {
      color: fadeout(@fc,10%);
    }
  }
  & when not (@fc = #FFFFFF) {
    &:hover {
      color: darken(@fc,20%);
    }
    &:focus {
      color: darken(@fc,20%);
    }
  }

  &[disabled] {
    color: fade(desaturate(@fc,90%),80%)
  }
}


//  ============================================================================
//  $   BASE STYLE
//  ----------------------------------------------------------------------------
.btn {
  position: relative;
  padding: @su-8 @su-12;

  border-radius: @btn-br;
  border: 1px solid transparent;

  font-weight: @btn-fw;
  font-family: inherit;
  text-decoration: none;
  transition: all 300ms @te-smooth;

  cursor: pointer;
  outline: none;
  touch-action: manipulation; // Not supported in FF and Safari

  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:focus {
    outline: none;
  }

  &[disabled] {
    box-shadow: none;
    opacity: 1;
    cursor: default;
    pointer-events: none;

    &:hover {
      box-shadow: none;
    }
  }
}


//  ============================================================================
//  $   BUTTON TYPES
//  ============================================================================
//  $$  Default Button
//      The default style makes it look like a generic text link.
//  ----------------------------------------------------------------------------
.btn {
  .btn-check-brc();
  .btn-check-bxs(@btn-bgc,@btn-bxos);
  .btn-bgc(@btn-bgc);
  .btn-check-bgg(@btn-bgg,@btn-bgc);
  .btn-fc(@btn-fc);
}

//  $$  Primary Button
//  ----------------------------------------------------------------------------
.btn._primary {
  .btn-check-brc(@btn-primary-bgc);
  .btn-check-bxs(@btn-primary-bgc,@btn-bxos);
  .btn-bgc(@btn-primary-bgc);
  .btn-check-bgg(@btn-primary-bgg,@btn-primary-bgc);
  .btn-fc(@btn-primary-fc);
}

//  $$  Secondary Button
//  ----------------------------------------------------------------------------
.btn._secondary {
  .btn-check-brc(@btn-secondary-bgc);
  .btn-check-bxs(@btn-secondary-bgc,@btn-bxos);
  .btn-bgc(@btn-secondary-bgc);
  .btn-check-bgg(@btn-secondary-bgg,@btn-secondary-bgc);
  .btn-fc(@btn-secondary-fc);
}

//  $$  Confirmation Button
//  ----------------------------------------------------------------------------
.btn._confirm {
  .btn-check-brc(@btn-confirm-bgc);
  .btn-check-bxs(@btn-confirm-bgc,@btn-confirm-bgc);
  .btn-bgc(@btn-confirm-bgc);
  .btn-check-bgg(@btn-confirm-bgg,@btn-confirm-bgc);
  .btn-fc(@btn-confirm-fc);
}

//  $$  Warning Button
//  ----------------------------------------------------------------------------
.btn._warning {
  .btn-check-brc(@btn-warning-bgc);
  .btn-check-bxs(@btn-warning-bgc,@btn-warning-bgc);
  .btn-bgc(@btn-warning-bgc);
  .btn-check-bgg(@btn-warning-bgg,@btn-warning-bgc);
  .btn-fc(@btn-warning-fc);
}


//  ============================================================================
//  $   BUTTON STYLES
//  ============================================================================
//  $$  Clear Style
//      Takes the current style and inverts the button so there is no background
//      color and only a border.
//  ----------------------------------------------------------------------------
.btn._clear {
  //  --  Confirm Clear Style
  &._confirm {
    .btn-check-brc(transparent);
    .btn-bgc(fade(@btn-confirm-bgc,0%));
    .btn-fc(@btn-confirm-bgc);
  }

  //  --  Warning Clear Style
  &._warning {
    .btn-check-brc(transparent);
    .btn-bgc(fade(@btn-warning-bgc,0%));
    .btn-fc(@btn-warning-bgc);
  }
}

//  $$  Outlined Style
//      Takes the current style and inverts the button so there is no background
//      color and only a border.
//  ----------------------------------------------------------------------------
.btn._outline {
  //  --  Base Outline Style
  .btn-check-brc(lighten(@btn-fc,10%));
  .btn-check-bxs(false,@btn-bxos);
  .btn-bgc(fade(@btn-fc,0%));

  //  --  Confirm Outline Style
  &._confirm {
    .btn-check-brc(@btn-confirm-bgc);
    .btn-check-bxs(false,@btn-confirm-bgc);
    .btn-bgc(fade(@btn-confirm-bgc,0%));
    .btn-fc(darken(@btn-confirm-bgc,10%));
  }

  //  --  Warning Outline Style
  &._warning {
    .btn-check-brc(@btn-warning-bgc);
    .btn-check-bxs(false,@btn-warning-bgc);
    .btn-bgc(fade(@btn-warning-bgc,0%));
    .btn-fc(darken(@btn-warning-bgc,10%));
  }
}

//  $$  Inverse Style
//      Inverts the background and font color style
//  ----------------------------------------------------------------------------
.btn._inverse {
  //  --  Base Inverse Style
  .btn-check-brc(false);
  .btn-check-bxs(false,@btn-bxos);
  .btn-bgc(fade(@white,95%));
  .btn-fc(@btn-fc);

  //  --  Inverse + Outline
  &._outline {
    .btn-check-brc(fade(@white,75%));
    .btn-check-bxs(false,@white);
    .btn-bgc(fade(@btn-bgc,0%));
    .btn-fc(@white);
  }

  //  --  Confirm Inverse Style
  &._confirm {
    .btn-check-brc(transparent);
    .btn-check-bxs(false,@btn-confirm-bgc);
    .btn-bgc(mix(lighten(@btn-confirm-bgc,15%),@white));
    .btn-fc(darken(@btn-confirm-bgc,30%));

    //  --  Confirm Inverse Outline
    &._outline {
      .btn-check-brc(mix(lighten(@btn-confirm-bgc,30%),@white));
      .btn-bgc(fade(@btn-confirm-bgc,0%));
      .btn-fc(@white);
    }
  }

  //  --  Warning Inverse Style
  &._warning {
    .btn-check-brc(transparent);
    .btn-check-bxs(false,@btn-warning-bgc);
    .btn-bgc(mix(lighten(@btn-warning-bgc,15%),@white));
    .btn-fc(darken(@btn-warning-bgc,20%));

    //  --  Confirm Inverse Outline
    &._outline {
      .btn-check-brc(mix(lighten(@btn-warning-bgc,30%),@white));
      .btn-bgc(fade(@btn-warning-bgc,0%));
      .btn-fc(@white);
    }
  }
}


// .btn {
//     //  --  When you want to turn a clear button red
//   &.-warning {
//       color: @btn-warning;
//       background-color: fade(@btn-warning,0%);
//       border-color: fade(@btn-warning,0%);
//
//       &:hover, &:focus {
//           color: darken(@btn-warning,10%);
//           background-color: lighten(@btn-warning,45%);
//           border-color: lighten(@btn-warning,45%);
//       }
//
//       &[disabled], &._disabled {
//           color: spin(desaturate(lighten(@btn-warning,15%),95%),5);
//           background-color: spin(desaturate(lighten(@btn-warning,45%),95%),5);
//           border-color: spin(desaturate(lighten(@btn-warning,45%),95%),5);
//       }
//   }
//
//   //  --  When you want to invert the outlined button to white.
//   //      This is used primarily on darker backgrounds.
//   &.white, &.-white {
//       color: @white;
//       background-color: fade(@white,0%);
//       border-color: transparent;
//
//       &:hover, &:focus {
//           color: fade(@white,95%);
//           background-color: fade(@white,5%);
//           border-color: transparent;
//       }
//
//       &[disabled], &._disabled { opacity: 0.5; }
//   }
// }

// .btn--s{
//   color: @white;
//   background-color: @btn-primary;
//   border-color: darken(@btn-primary,10%);
//   box-shadow: inset 0 1px 0 lighten(@btn-primary,20%);
//
//   &:hover, &:focus {
//       color: fadeout(@white,10%);
//       background-color: darken(@btn-primary,10%);
//       border-color: darken(@btn-primary,20%);
//       box-shadow: inset 0 1px 0 lighten(@btn-primary,10%);
//   }
//   &[disabled], &._disabled {
//       color: @white;
//       background-color: desaturate(lighten(@btn-primary,35%),70%);
//       border-color: desaturate(lighten(@btn-primary,30%),70%);
//   }
// }

//  -----------------------------------------------------------------------------
//  $$  Secondary Button Style
//  -----------------------------------------------------------------------------
// input[type="submit"].btn-secondary,
// input[type="button"].btn-secondary,
// button.btn-secondary,
// .btn-secondary {
//     color: darken(@btn-secondary,50%);
//     background-color: @btn-secondary;
//     border-color: darken(@btn-secondary,20%);
//     box-shadow: inset 0 1px 0 lighten(@btn-secondary,5%);
//
//     &:hover, &:focus {
//         color: darken(@btn-secondary,60%);
//         background-color: darken(@btn-secondary,10%);
//         border-color: darken(@btn-secondary,40%);
//         box-shadow: inset 0 1px 0 @btn-secondary;
//     }
//
//     &[disabled], &._disabled {
//         color: desaturate(darken(@btn-secondary,25%),30%);
//         background-color: spin(desaturate(lighten(@btn-secondary,5%),30%),5);
//         border-color: spin(desaturate(darken(@btn-secondary,5%),30%),5);
//     }
// }
//
// //  -----------------------------------------------------------------------------
// //  $$  Outlined Button Style
// //  -----------------------------------------------------------------------------
// input[type="submit"].btn-outlined,
// input[type="button"].btn-outlined,
// button.btn-outlined,
// .btn-outlined {
//     color: @btn-outlined;
//     background-color: fade(@btn-outlined,0%);
//     border-color: lighten(@btn-outlined,10%);
//     box-shadow: none;
//
//     &:hover, &:focus {
//         color: darken(@btn-outlined,10%);
//         background-color: lighten(@btn-outlined,55%);
//         border-color: @btn-outlined;
//         box-shadow: none;
//     }
//
//     &[disabled], &._disabled {
//         color: spin(desaturate(lighten(@btn-outlined,25%),95%),5);
//         background-color: spin(desaturate(lighten(@btn-outlined,55%),95%),5);
//         border-color: spin(desaturate(lighten(@btn-outlined,45%),95%),10);
//     }
//
//     //  --  When you want to turn the outlined button red
//     &.-warning {
//         color: @btn-warning;
//         background-color: fade(@btn-warning,0%);
//         border-color: lighten(@btn-warning,10%);
//
//         &:hover, &:focus {
//             color: darken(@btn-warning,10%);
//             background-color: lighten(@btn-warning,45%);
//             border-color: @btn-warning;
//         }
//
//         &[disabled], &._disabled {
//             color: spin(desaturate(lighten(@btn-warning,15%),95%),5);
//             background-color: spin(desaturate(lighten(@btn-warning,45%),95%),5);
//             border-color: spin(desaturate(lighten(@btn-warning,35%),95%),10);
//         }
//     }
//
//     //  --  When you want to invert the outlined button to white.
//     //      This is used primarily on darker backgrounds.
//     &.white, &.-white {
//         color: @white;
//         background-color: fade(@white,0%);
//         border-color: @white;
//
//         &:hover, &:focus {
//             color: fade(@white,95%);
//             background-color: fade(@white,10%);
//             border-color: fade(@white,60%);
//         }
//         &[disabled], &._disabled { opacity: 0.5; }
//     }
//
//     //  --  When you want to invert the outlined button to white.
//     //      This is used primarily on darker backgrounds.
//     &.gray, &.-gray {
//         color: @black-400;
//         background-color: @white;
//         border-color: @black-150;
//
//         &:hover, &:focus {
//             background-color: @black-050;
//         }
//         &[disabled], &._disabled {
//             opacity: 0.5;
//         }
//     }
//
// }
//
// //  -----------------------------------------------------------------------------
// //  $$  Clear Button Style
// //  -----------------------------------------------------------------------------
// input[type="submit"].btn-clear,
// input[type="button"].btn-clear,
// button.btn-clear,
// .btn-clear {
//     color: @btn-clear;
//     background-color: fade(@btn-clear,0%);
//     border-color: transparent;
//     box-shadow: none;
//
//     &:hover, &:focus {
//         color: darken(@btn-clear,10%);
//         background-color: fade(@btn-clear,10%);
//         border-color: transparent;
//         box-shadow: none;
//     }
//
//     &[disabled], &._disabled {
//         color: spin(desaturate(lighten(@btn-clear,25%),95%),5);
//         background-color: spin(desaturate(lighten(@btn-clear,55%),95%),5);
//         border-color: transparent;
//     }
//
//     //  --  When you want to turn a clear button red
//     &.-warning {
//         color: @btn-warning;
//         background-color: fade(@btn-warning,0%);
//         border-color: fade(@btn-warning,0%);
//
//         &:hover, &:focus {
//             color: darken(@btn-warning,10%);
//             background-color: lighten(@btn-warning,45%);
//             border-color: lighten(@btn-warning,45%);
//         }
//
//         &[disabled], &._disabled {
//             color: spin(desaturate(lighten(@btn-warning,15%),95%),5);
//             background-color: spin(desaturate(lighten(@btn-warning,45%),95%),5);
//             border-color: spin(desaturate(lighten(@btn-warning,45%),95%),5);
//         }
//     }
//
//     //  --  When you want to invert the outlined button to white.
//     //      This is used primarily on darker backgrounds.
//     &.white, &.-white {
//         color: @white;
//         background-color: fade(@white,0%);
//         border-color: transparent;
//
//         &:hover, &:focus {
//             color: fade(@white,95%);
//             background-color: fade(@white,5%);
//             border-color: transparent;
//         }
//
//         &[disabled], &._disabled { opacity: 0.5; }
//     }
// }
//
// //  -----------------------------------------------------------------------------
// //  $$  Confirm Button Style
// //  -----------------------------------------------------------------------------
// input[type="submit"].btn-confirm,
// input[type="button"].btn-confirm,
// button.btn-confirm,
// .btn-confirm {
//     color: @white;
//     background-color: @btn-confirm;
//     border-color: darken(@btn-confirm,10%);
//     box-shadow: inset 0 1px 0 lighten(@btn-confirm,20%);
//
//     &:hover, &:focus {
//         color: fadeout(@white,10%);
//         background-color: darken(@btn-confirm,10%);
//         border-color: darken(@btn-confirm,20%);
//         box-shadow: inset 0 1px 0 lighten(@btn-confirm,10%);
//     }
//
//     &[disabled], &._disabled {
//         color: desaturate(lighten(@btn-confirm,15%),25%);
//         background-color: desaturate(lighten(@btn-confirm,30%),20%);
//         border-color: desaturate(lighten(@btn-confirm,25%),25%);
//     }
// }
//
//
// //  -----------------------------------------------------------------------------
// //  $$  Warning Button Style
// //  -----------------------------------------------------------------------------
// input[type="submit"].btn-warning,
// input[type="button"].btn-warning,
// button.btn-warning,
// .btn-warning {
//     color: @white;
//     background-color: lighten(@btn-warning,10%);
//     border-color: darken(@btn-warning,10%);
//     box-shadow: inset 0 1px 0 lighten(@btn-warning,30%);
//
//     &:hover, &:focus {
//         color: fadeout(@white,10%);
//         background-color: @btn-warning;
//         border-color: darken(@btn-warning,20%);
//         box-shadow: inset 0 1px 0 lighten(@btn-warning,10%);
//     }
//
//     &[disabled], &._disabled {
//         color: @white;
//         background-color: desaturate(lighten(@btn-warning,25%),30%);
//         border-color: desaturate(lighten(@btn-warning,25%),50%);
//     }
// }
//
// //  -----------------------------------------------------------------------------
// //  $$  Icon Button Style
// //  -----------------------------------------------------------------------------
// input[type="submit"].btn-icon,
// input[type="button"].btn-icon,
// button.btn-icon,
// .btn-icon {
//     padding: 0;
//     color: inherit;
//     background-color: transparent;
//     border-color: transparent;
//     box-shadow: none;
//
//     &:hover, &:focus {
//         color: inherit;
//         background-color: transparent;
//         border-color: transparent;
//         box-shadow: none;
//     }
//
//     &.-gray {
//         color: @black-500;
//         background-color: @black-100;
//         border-color: @black-300;
//
//         &:hover, &:focus {
//             color: @black-600;
//             background-color: @black-150;
//             border-color: @black-350;
//         }
//     }
// }
//
// //  -----------------------------------------------------------------------------
// //  $$  Loaders
// input[type=submit],
// input[type=button],
// button, .button, a.button, a.button:visited,
// .btn, .btn:visited, .btn-secondary, .btn-outlined, .btn-clear, .btn-confirm, .btn-warning, .btn-icon {
//     &.loading {
//         pointer-events: none;
//
//         &:before {
//             //&:extend(.spinner);
//             float: left;
//             left: -4px;
//             content: "";
//         }
//
//         .btn-secondary&:before,
//         .btn-outlined&:before,
//         .btn-clear&:before {
//             border-top-color: @powder-200;
//             border-right-color: @powder-200;
//             border-bottom-color: @powder-200;
//             border-left-color: @powder-400;
//         }
//     }
// }
//
// //  =============================================================================
// //  $  LAYOUT & SIZES
// //  -----------------------------------------------------------------------------
// input[type="submit"],
// input[type="button"],
// button, .button,
// .btn, [class*="btn-"]  {
//     &._block {
//         display: block;
//         margin-bottom: 0.5em;
//         width: 100%;
//
//         & + & { margin-left: 0; }
//     }
//     &._hide { display: none; }
//     &._show { display: inline-block; }
//
//     &._xlarge  { font-size: ceil(@body-font-size * 1.84); }
//     &._large {
//         padding-left: 2em;
//         padding-right: 2em;
//         font-size: ceil(@body-font-size * 1.38);
//     }
//     &._medium  { font-size: ceil(@body-font-size * 1.15); }
//     &._small   { font-size: ceil(@body-font-size * 0.92); }
//
//     &._left    { float: left; }
//     &._right {
//         float: right;
//         margin-right: 2px;
//         &:first-of-type { margin-right: 0; }
//     }
// }
