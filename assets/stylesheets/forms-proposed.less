//
//  STACK OVERFLOW
//  FORMS
//
//  TABLE OF CONTENTS
//  • VARIABLES
//  • BASE STYLES
//  • SPECIFIC STYLES
//
//  ============================================================================
//  $ VARIABLES
//  ----------------------------------------------------------------------------
@f-padding:                @su-8 @su-16;
@f-font-size:              @fs-13;
@f-line-height:            @lh-6;
@f-color:                  @black-700;
@f-border:                 @black-150;
@f-placeholder-color:      @black-150;

@f-border_focused:         @blue-500;
@f-shadowInner_focused:    @black-050;
@f-shadowDrop_focused:     fade(@f-border_focused,50%);


//  ============================================================================
//  $   UNIVERSAL PROPERTIES
//      These are properties which are universally applied to the various
//      form elements.
//  ----------------------------------------------------------------------------
.f-label,
.f-input,
.f-select {
  //    Now let's reset any previous values that were set.
  min-height: auto;
  margin: 0;

  //    New styles
  box-sizing: border-box;
  display: inline-flex;
  font-size: @fs-13;
  line-height: @lh-6;
  color: @f-color;
}


//  ============================================================================
//  $   INPUTS
//  ============================================================================
//  --  BASE STYLES
//  ----------------------------------------------------------------------------
.f-input {
  padding: @su-8 @su-12;
  border: 1px solid @black-150;
  border-radius: 0;
  box-shadow: inset 0 0 1px fade(@black-350,20%), 0 0 0 fade(@white,0%);
  background-color: @white;
  transition: all 600ms @te-smooth;

  //  --  PLACEHOLDER
  //  --------------------------------------------------------------------------
  &::-webkit-input-placeholder {
    color: @f-placeholder-color;
  }
  &::-moz-placeholder { // FF 18+
    color: @f-placeholder-color;
    opacity: 1; // yeap, we need that for firefox
  }
  &:-ms-input-placeholder { // IE
    color: @f-placeholder-color;
  }
  &::-ms-input-placeholder { // Edge
    color: @f-placeholder-color;
  }
  &::placeholder {
    color: @f-placeholder-color;
  }

  //  --  STATES
  //  --------------------------------------------------------------------------
  //  :hover
  &:hover {
    border-color: fade(@f-border_focused,50%);
    box-shadow: inset 0 0 2px darken(@f-shadowInner_focused,10%), 0 0 2px fade(@f-shadowDrop_focused,20%);
  }

  //  :focused
  &:focus {
    outline: 0;
    border-color: @f-border_focused;
    box-shadow: inset 0 0 4px @f-shadowInner_focused, 0 0 8px @f-shadowDrop_focused;
  }

  //  --  DISABLED / READONLY STATE
  &[disabled],
  &[read-only] {
    border-color: @black-075;
    box-shadow: inset 0 0 2px fade(@black-350,10%);
    background-color: @bgc-lightest;
    color: @black-350;
  }
  &[disabled], &.is-disabled {
      background-image: url("../../Img/forms/icon-disabled.svg"), none;
      background-repeat: no-repeat;
      background-position: right @su-12 center;
      cursor: not-allowed;
  }
}

//  ============================================================================
//  $ TYPE STYLES
//  ----------------------------------------------------------------------------
//  -- Labels
.f-label {
  display: inline-flex;
  margin: 0;

  font-size: @f-font-size;
  line-height: @f-line-height;
  font-weight: 700;
  color: @black-700;
  cursor: pointer;

  //  --  Styles
  &._muted    { color: @copy_muted-color; }

  //  --  Sizes
  &._small    { font-size: @f-font-size - 2; }   //  @fs-12
  &._medium   { font-size: @f-font-size + 4; }   //  @fs-18
  &._large    { font-size: @f-font-size + 8; }   //  @fs-22

  &._medium,
  &._large { font-weight: 400; }

  //  Required / Optional within a label
  .is-required,
  .is-optional {
      display: inline-flex;
      align-self: flex-end;
      margin-bottom: @su-2;
      margin-left: @su-8;
      font-size: 86%;   //  @fs-12
      font-style: italic;
      font-weight: 400;
  }
}

//  --  Required / Optional
p,
span {
    &.is-required { color: @red-400; }
    &.is-optional { color: @black-500; }
}

//  --  Help Text
.t-help {
    margin-top: @su-8 - 2;
    margin-bottom: @su-12;
    color: @black-400;
    font-size: @f-font-size - 2;
    line-height: @lh-4;   // 16px / 13px

    &._medium { font-size: @f-font-size; }
}


//  ============================================================================
//  $ INPUT STYLES
//  ----------------------------------------------------------------------------
.f-input {
    //  --  HOVER STATE
    &:hover {
        border-color: fade(@f-border_focused,50%);
        box-shadow: inset 0 0 2px darken(@f-shadowInner_focused,10%), 0 0 2px fade(@f-shadowDrop_focused,20%);
    }

    //  --  FOCUSED STATE
    &:focus {
        border-color: @f-border_focused;
        box-shadow: inset 0 0 4px @f-shadowInner_focused, 0 0 5px @f-shadowDrop_focused;
        outline: 0;
    }

    //  --  DISABLED / READONLY STATE
    &[disabled], &.is-disabled,
    &[read-only], &.is-readonly {
        border-color: @black-075;
        box-shadow: inset 0 0 3px fade(@black-350,10%);
        background-color: @black-050;
        color: @black-400;
    }
    &[disabled], &.is-disabled {
        background-image: url("../../Img/forms/icon-disabled.svg"), none;
        background-repeat: no-repeat;
        background-position: right @su-12 center;
        cursor: not-allowed;
    }

    //  --  Sizes
    &._large {
        padding-top: @su-16;
        padding-bottom: @su-16;
        font-size: @f-font-size + 11;  // @fs-25
    }
    &._medium {
        font-size: @f-font-size + 4;   // @fs-18
    }
    &._small {
        padding-left: @su-12;
        padding-right: @su-12;
        font-size: @f-font-size - 2;   // @fs-12
    }
}

//  $ TEXTAREA
//  ----------------------------------------------------------------------------
textarea.f-input {
    padding: @su-12;
    height: auto;
    resize: vertical;
}

//  $ SELECTS
//  ----------------------------------------------------------------------------
.f-select {
    position: relative;
    display: inline-flex;

    // Create custom arrows since appearance removes them.
    &:before,
    &:after {
        content: "";
        position: absolute;
        right: 0.75em;
        pointer-events: none;

        border-width: 3px;
        border-style: solid;
        border-color: @f-color transparent;
    }
    &:before {
        top: calc(~"50% - 6px");
        border-top-width: 0;
        border-bottom-width: 5px;
    }
    &:after {
        top: calc(~"50% + 1px");
        border-top-width: 5px;
        border-bottom-width: 0;
    }

    > select {
        .appearance(none);
        width: 100%;
        padding: @f-padding;
        padding-right: 33px;

        font-size: @f-font-size;
        line-height: @f-line-height;
        color: @f-color;
        background-color: @white;
        border: 1px solid @f-border;
        border-radius: @br-2;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, background-color 0.15s ease-in-out;

        &:hover {
            border-color: fade(@f-border_focused,50%);
            box-shadow: inset 0 0 2px darken(@f-shadowInner_focused,10%), 0 0 2px fade(@f-shadowDrop_focused,20%);
        }

        &:focus {
            border-color: @f-border_focused;
            box-shadow: inset 0 0 4px @f-shadowInner_focused, 0 0 5px @f-shadowDrop_focused;
            outline: 0;
        }
    }

    //  Disabled State
    //  You have to apply this to the wrapping div so the arrows look disabled too.
    &.is-disabled {
        &:before,
        &:after { opacity: 0.3; }

        select {
            color: lighten(@f-color,45%);
            background-color: @black-050;
            border-color: lighten(@f-border,10%);

            &:hover {
                border-color: lighten(@f-border,10%);
                box-shadow: none;
            }
        }
    }
}

//  $ FILE UPLOAD INPUT
//  ----------------------------------------------------------------------------
.f-input-file {
    display: block;
    margin: 0;
    padding: @su-8 0;
    font-size: @fs-11;
}



//  ============================================================================
//  $ CHECKBOXES & RADIO SELECTS
//  ----------------------------------------------------------------------------
.f-checkbox,
.f-radio {
    //  Because we add margins to the checkbox/radio DOM elements in forms.less,
    //  we need reset those values.
    //  TO-DO: Remove the old input styles.
    input[type="radio"],
    input[type="checkbox"] { margin: 0; }

    .g-col { .flex-flow(column nowrap); }

    //  Column with the checkbox or radio input
    > .-input {
        .flex(none);
        padding-right: @su-8;

        > input {
            margin: 0;  // Reset browser
            &[type="checkbox"] { margin-top: @su-2; }

            &:focus { outline: 0; }
        }
    }

    //  Remove bold weight on labels
    .f-label { font-weight: 400; }

    //  Correct margins & paddings
    .t-help {
        margin: @su-2 0;
        padding-right: 1em;
    }

    //  --  LAYOUTS
    //  When you have multiple checkbox or radios next to each other, space them out
    & + & { margin-top: @su-8; }

    //  When you want to pull a checkbox to the right, use the "._end" modifying class
    //  on the wrapping ".g-row".
    &._end .g-col { .flex(0 auto); }
}


//  ============================================================================
//  $ STATES
//  ----------------------------------------------------------------------------
.input-group {
    box-sizing: border-box;

    //  Message (Generic)
    .message {
        display: block;
        margin-bottom: 0;
        padding-top: @su-8;
        padding-bottom: @su-8;
    }

    //  --  STATE BACKGROUNDS
    &.has-warning,
    &.has-error,
    &.is-success {
        .f-input,
        .tag-editor,
        .autocomplete input,
        .f-select select {
            background-position: right @su-12 center;
            background-repeat: no-repeat;
        }
        .f-select select { background-position: right @su-24 center; }
    }

    //  --  WARNING
    &.has-warning {
        .f-input,
        .f-select select {
            border-color: mix(@yellow-500,@orange-600);
            background-image: url("../../Img/forms/icon-warning.svg"), none;

            &:hover {
                border-color: lighten(mix(@yellow-500,@orange-600),10%);
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @yellow-200;
            }
            &:focus {
                border-color: saturate(mix(@yellow-500,@orange-600),10%);
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @yellow-200;
            }
        }
        .message { color: mix(@yellow-500,@orange-600); }
    }

    //  --  ERROR
    &.has-error {
        .f-input,
        .tag-editor,
        .autocomplete input,
        .f-select select {
            border-color: @red-400;
            background-image: url("../../Img/forms/icon-error.svg"), none;

            &:hover {
                border-color: @red-300;
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @red-100;
            }
            &:focus {
                border-color: @red-500;
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @red-200;
            }
        }
        .message { color: @red-500; }
    }

    //  --  SUCCESS
    &.is-success {
        .f-input,
        .f-select select {
            border-color: @green-400;
            background-image: url("../../Img/forms/icon-success.svg"), none;

            &:hover {
                border-color: @green-300;
                box-shadow: inset 0 0 1px @black-100, 0 0 2px @green-100;
            }
            &:focus {
                border-color: @green-500;
                box-shadow: inset 0 0 4px @black-050, 0 0 4px @green-200;
            }
        }
        .message { color: darken(@green-500,5%); }
    }

    //  --  DISABLED
    &.is-disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
}

//  ============================================================================
//  $ INPUT & BUTTON GROUPS
//  ----------------------------------------------------------------------------
.input-group,
.button-group {
    *,
    *:before,
    *:after { box-sizing: border-box; }

    position: relative;
    .flexbox();
}

//  --  INPUT GROUPS
//      Wrapping <div> that provides ammple white space around a unit of
//      form elements
.input-group {
    .flex-flow(column nowrap);
    margin-bottom: @su-24;

    //  If an input-group nested within another, remove the bottom margin.
    & > & { margin-bottom: 0; }


    > .f-label {
        //  If there's a label, we generally want a top margin on the item below.
        //  But ONLY on labels that are direct children.
        + * { margin-top: @su-8 - 2; }

        //  Except if help copy follows
        + .t-help { margin-top: @su-2; }

        //  If an input-group follows a label though, we want that top margin to be greater.
        + .input-group { margin-top: @su-16; }
    }


    //  Input Group Clusters
    &._clusters {
        .g-row + .g-row { margin-top: @su-8; }
        .input-group {
            margin-bottom: 0;
            .f-label { font-weight: 400; }
        }
    }

    //  Input prepends, appends, and connectors use the same grayed out box
    //  style. This is the univesal style for it.
    .-fill {
        position: relative;
        .flex(none);
        align-items: center;
        padding: @f-padding;
        color: @black-600;

        background-color: @black-050;
        border: 1px solid @f-border;
        border-left-width: 0;
        border-right-width: 0;

        > label {
            font-size: inherit;
            line-height: inherit;
        }

        //  When we don't want borders or backgrounds
        &._clean {
            border-color: transparent;
            background-color: transparent;
        }

        //  Ordering
        &.is-first {
            .flex-order(-1);
            border-left-width: 1px;
        }
        &.is-last {
            .flex-order(99);
            border-right-width: 1px;
        }
    }

    //  If a select menu is directly against a fill, alter the border-radius
    .-fill + .f-select > select {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    [class^="btn"].is-last {
        .flex-order(100);
        margin-left: -1px;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }
}

//  --  BUTTON GROUPS
//      Wrapping <div> for buttons / actions
.button-group {
    [class^="btn"] + [class^="btn"] { margin-left: @su-2; }

    &.g-column {
        [class^="btn"] + [class^="btn"] {
            margin-top: @su-8;
            margin-left: 0;
        }
    }

    .t-help {
        margin-top: @su-12;
        margin-bottom: 0;
    }

    //  Applies top border to the button container
    &.has-border {
        padding-top: @su-16 + @su-8;
        border-top: 1px solid lighten(@f-border,5%);
    }
}


//  ============================================================================
//  $ RADIO TOGGLE
//  ----------------------------------------------------------------------------
.f-radio-toggle {

    // Default Blue Theme
    .f-label {
        padding: @f-padding;
        margin-left: -1px; // TGOAS: Prevents any adjacent vertical border from appearing next to selected item
        margin-right: -1px; // TGOAS: Prevents any adjacent vertical border from appearing next to selected item
        border: 1px solid @f-border;
        background-color: @white;

        font-weight: 400;
        line-height: @f-line-height;
        color: @f-color;
        text-align: center;

        transition: all 600ms @te-smooth;
        cursor: pointer;

        &:hover,
        &:focus,
        &:active {
            color: darken(@f-color,10%);
            background-color: @blue-050;
            border-color: @blue-200;
            z-index: 1;
        }
    }

    input[type="radio"] {
        position: absolute;
        left: -9999em;
        opacity: 0;

        &:checked + .f-label {
            color: @white;
            background-color: @blue-500;
            border-color: @blue-500;
            pointer-events: none;

            position: relative;
            z-index: 2; // ensure the borders are not visible on :hover
        }
    }

    .g-col {
        &:first-of-type .f-label {
            margin-left: 0;
            border-radius: @br-2 0 0 @br-2;
        }
        &:last-of-type .f-label {
            border-radius: 0 @br-2 @br-2 0;
        }
    }

    // Muted Green Theme
    &._muted {
        .f-label {
            border: 1px solid @black-150;
            background-color: @white;
            color: @black-400;

            &:hover,
            &:focus,
            &:active {
                color: @black-700;
                background-color: @black-050;
                border-color: @black-200;
            }
        }
        input[type="radio"] {
            &:checked + .f-label {
                color: @white;
                background-color: @green-400;
                border-color: @green-400;
            }
            &._off {
                &:checked + .f-label {
                    color: @black-500;
                    background-color: @black-100;
                    border-color: @black-200;
                }
            }
        }
    }
}

//  ============================================================================
//  $ Chosen plugin (JS plugin)
//  ----------------------------------------------------------------------------
.container .chosen-container {
    margin-top: 0;

    &.chosen-container-active {
        border-width: 0;
        .chosen-choices {
            border-color: @f-border_focused;
            box-shadow: inset 0 0 4px @f-shadowInner_focused, 0 0 5px @f-shadowDrop_focused;
        }
    }

    .chosen-choices {
        .flexbox();
        padding: 0 1px;
        min-height: 38px;
        background-image: none;
        border-radius: @br-2;
        border-color: @f-border;

        &:hover {
            border-color: fade(@f-border_focused,50%);
            box-shadow: inset 0 0 2px darken(@f-shadowInner_focused,10%), 0 0 2px fade(@f-shadowDrop_focused,20%);
        }
    }

    //  Restyle tags
    .chosen-choices {
        li.search-choice,
        li.search-field {
            display: inline-flex;
            align-items: center;
            margin: @su-4 1px;
            padding: @su-2 (@su-4 + 2);
        }
        li.search-choice {
            float: none;
            box-shadow: none;
            background-image: none;

            font-family: @ff-sans;
            font-size: @fs-12;
            color: @powder-600;
            background-color: @powder-100;
            border-color: transparent;
            border-radius: @br-2;

            &:first-child { margin-left: 3px; }

            .search-choice-close {
                position: relative;
                top: 0;
                right: -1px;
                margin-left: @su-4;
                transition: none;
            }
        }
    }
     li.search-field > input[type="text"] {
        padding: 0;
        margin: 0;
    }
}
