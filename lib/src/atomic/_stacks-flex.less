//
//  STACK OVERFLOW
//  FLEXBOX HELPERS
//
//  This CSS comes from Stacks, our CSS & Pattern library for rapidly building
//  Stack Overflow. For documentation of all these classes and how to contribute,
//  visit https://stackoverflow.design/
//
//  TABLE OF CONTENTS
//  â€¢ ATOMIC CLASSES


//  ============================================================================
//  $  ATOMIC CLASSES
//  ----------------------------------------------------------------------------
//  --  FLEX DIRECTION
//      This determines the direction content flows within a parent container.
//      The default values are row.
//  ----------------------------------------------------------------------------
.fd-row                   { -ms-flex-direction: row !important; flex-direction: row !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: normal !important; }
.fd-rowreverse            { -ms-flex-direction: row-reverse !important; flex-direction: row-reverse !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: reverse !important; }
.fd-column                { -ms-flex-direction: column !important; flex-direction: column !important; -webkit-box-orient: vertical !important; -webkit-box-direction: normal !important; }
.fd-columnreverse         { -ms-flex-direction: column-reverse !important; flex-direction: column-reverse !important; -webkit-box-orient: vertical !important; -webkit-box-direction: reverse !important; }

//  --  FLEX WRAP
//      This determines if a parent's child items will wrap or not.
//  ----------------------------------------------------------------------------
.fw-wrap                  { -ms-flex-wrap: wrap !important; flex-wrap: wrap !important; }
.fw-reverse               { -ms-flex-wrap: wrap-reverse !important; flex-wrap: wrap-reverse !important; }
.fw-none                  { -ms-flex-wrap: none !important; flex-wrap: none !important; }

//  --  FLEX FLOW
//      This is another shorthand property for flex-direction and flex-wrap.
//      Default value is "row nowrap".
//  ----------------------------------------------------------------------------
.ff-row-wrap              { -ms-flex-flow: row wrap !important; flex-flow: row wrap !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: normal !important; }
.ff-row-nowrap            { -ms-flex-flow: row nowrap !important; flex-flow: row nowrap !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: normal !important; }
.ff-rowreverse-wrap       { -ms-flex-flow: row-reverse wrap !important; flex-flow: row-reverse wrap !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: reverse !important; }
.ff-rowreverse-nowrap     { -ms-flex-flow: row-reverse nowrap !important; flex-flow: row-reverse nowrap !important; -webkit-box-orient: horizontal !important; -webkit-box-direction: reverse !important; }
.ff-column-wrap           { -ms-flex-flow: column wrap !important; flex-flow: column wrap !important; -webkit-box-orient: vertical !important; -webkit-box-direction: normal !important; }
.ff-column-nowrap         { -ms-flex-flow: column nowrap !important; flex-flow: column nowrap !important; -webkit-box-orient: vertical !important; -webkit-box-direction: normal !important; }
.ff-columnreverse-wrap    { -ms-flex-flow: column-reverse wrap !important; flex-flow: column-reverse wrap !important; -webkit-box-orient: vertical !important; -webkit-box-direction: reverse !important; }
.ff-columnreverse-nowrap  { -ms-flex-flow: column-reverse nowrap !important; flex-flow: column-reverse nowrap !important; -webkit-box-orient: vertical !important; -webkit-box-direction: reverse !important; }

//  --  JUSTIFY CONTENT
//      Defines the child alignment along the parent's main axis
//  ----------------------------------------------------------------------------
.jc-center                { justify-content: center !important; -webkit-box-pack: center !important; -ms-flex-pack: center !important; }
.jc-end                   { justify-content: flex-end !important; -webkit-box-pack: end !important; -ms-flex-pack: end !important; }
.jc-spacearound           { justify-content: space-around !important; -ms-flex-pack: distribute !important; }
.jc-spacebetween          { justify-content: space-between !important; -webkit-box-pack: justify !important; -ms-flex-pack: justify !important; }
.jc-start                 { justify-content: flex-start !important; -webkit-box-pack: start !important; -ms-flex-pack: start !important; }

//  --  ALIGN CONTENT
//      Aligns the container's lines when there is extra space in the
//      cross-axis. Note that this only works when a parent container
//      has more than one line.
//  ----------------------------------------------------------------------------
.ac-center                { align-content: center !important; -ms-flex-line-pack: center !important; }
.ac-end                   { align-content: flex-end !important; -ms-flex-line-pack: end !important; }
.ac-spacearound           { align-content: space-around !important; -ms-flex-line-pack: distribute !important; }
.ac-spacebetween          { align-content: space-between !important; -ms-flex-line-pack: justify !important; }
.ac-start                 { align-content: flex-start !important; -ms-flex-line-pack: start !important; }
.ac-stretch               { align-content: stretch !important; -ms-flex-line-pack: stretch !important; }

//  --  ALIGN ITEMS
//      Defines the default behavior for how child items align along
//      the parent's cross axis. Think of it the cross-axis for
//      justify-content.
//  ----------------------------------------------------------------------------
.ai-baseline              { align-items: baseline !important; -webkit-box-align: baseline !important; -ms-flex-align: baseline !important; }
.ai-center                { align-items: center !important; -webkit-box-align: center !important; -ms-flex-align: center !important; }
.ai-end                   { align-items: flex-end !important; -webkit-box-align: end !important; -ms-flex-align: end !important; }
.ai-start                 { align-items: flex-start !important; -webkit-box-align: start !important; -ms-flex-align: start !important; }
.ai-stretch               { align-items: stretch !important; -webkit-box-align: stretch !important; -ms-flex-align: stretch !important; }

//  --  CENTER ITEMS
//      A common combination of classes is .jc-center and .ai-center.
//      Use this class when you want both.
//  ----------------------------------------------------------------------------
.grid__center             { .jc-center; .ai-center; }

//  --  ALIGN SELF
//      Allows child containers to re-align themselves irregardless
//      of the parent's main axis direction.
//  ----------------------------------------------------------------------------
.as-auto                  { align-self: auto !important; -ms-flex-item-align: auto !important; }
.as-baseline              { align-self: baseline !important; -ms-flex-item-align: baseline !important; }
.as-center                { align-self: center !important; -ms-flex-item-align: center !important; }
.as-end                   { align-self: flex-end !important; -ms-flex-item-align: end !important; }
.as-start                 { align-self: flex-start !important; -ms-flex-item-align: start !important; }
.as-stretch               { align-self: stretch !important; -ms-flex-item-align: stretch !important; }

//  --  FLEX
//      Graduating scale of flex-grow and flex-shrink values
//  ----------------------------------------------------------------------------
.fl0                      { -webkit-box-flex: 0 !important; -ms-flex: 0 auto !important; flex: 0 auto !important; }
.fl1                      { -webkit-box-flex: 1 !important; -ms-flex: 1 auto !important; flex: 1 auto !important; }
.fl2                      { -webkit-box-flex: 2 !important; -ms-flex: 2 auto !important; flex: 2 auto !important; }
.fl3                      { -webkit-box-flex: 3 !important; -ms-flex: 3 auto !important; flex: 3 auto !important; }
.fl4                      { -webkit-box-flex: 4 !important; -ms-flex: 4 auto !important; flex: 4 auto !important; }
.fl5                      { -webkit-box-flex: 5 !important; -ms-flex: 5 auto !important; flex: 5 auto !important; }

//  --  Ordering
//      Designate a child container's position.
//  ----------------------------------------------------------------------------
.order-first              { order: -1 !important; -webkit-box-ordinal-group: 0 !important; -ms-flex-order: -1 !important; }
.order-last               { order: 1 !important; -webkit-box-ordinal-group: 2 !important; -ms-flex-order: 1 !important; }
