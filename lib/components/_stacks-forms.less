//
//  STACK OVERFLOW
//  FORMS

//  This CSS comes from Stacks, our CSS & Pattern library for rapidly building
//  Stack Overflow. https://stackoverflow.design/
//
//  For documentation of all these classes and how to contribute,
//  https://gh.stackoverflow.com/pages/Design/Stacks/
//
//  TABLE OF CONTENTS
//  • UNIVERSAL PROPERTIES
//    - Layout
//    - Font Styles
//  • Inputs
//    - Base Style
//    - Interaction States
//    - Textareas
//    - Select Menus
//    - File Upload
//    - Checkboxes & Radios
//  • LABELS
//    - Base Style
//    - Style Modifications
//    - Status Flag
//  • TYPE STYLES
//  • LABELS
//
//  ============================================================================
//  $  INPUTS
//  ============================================================================
//  $$  BASE STYLE
//  ----------------------------------------------------------------------------
.input {
    padding: 0.8em 1em;
    width: 100%;
    margin: 0;
    border: 1px solid @black-150;
    border-radius: @br-sm;
    background-color: @white;
    box-shadow: inset 0 0 1px fade(@black-350, 20%), 0 0 0 fade(@white, 0%);
    font-family: @ff-sans;
    font-size: inherit;
    line-height: 1;

    //  --  PLACEHOLDER
    //  ------------------------------------------------------------------------
    &::-webkit-input-placeholder {
        color: @black-150;
    }
    &::-moz-placeholder { // FF 18+
        color: @black-150;
        opacity: 1;
    }
    &:-ms-input-placeholder { // IE
        color: @black-150;
    }
    &::-ms-input-placeholder { // Edge
        color: @black-150;
    }
    &::placeholder {
        color: @black-150;
    }
}

.input-icon {
    position: absolute;
    top: 25%;
    right: @su8;
    pointer-events: none;

    .svg-icon {
        vertical-align: unset;
    }
}

//  $$  MESSAGE
//      Set some baseline styles
//  ----------------------------------------------------------------------------
.input-message {
    margin: @su4 0 0;
    .mx-fs(@fs-caption);
}


//  $$  STATES
//      The many states for inputs and select menus.
//  ----------------------------------------------------------------------------
.input,
.select > select {
    //  Focus
    &:focus {
        outline: 0;
        border-color: @blue-300;
        box-shadow: inset 0 0 4px @black-050, 0 0 0 @su4 fade(@blue-500, 15%);
    }

    //  Disabled, Read-only
    &[disabled],
    &[read-only] {
        border-color: @black-075;
        box-shadow: inset 0 0 2px fade(@black-350, 10%);
        background-color: @bgc-lightest;
        color: @fc-light;
    }

    //  Disabled
    &[disabled] {
        cursor: not-allowed;
    }
}

//  $$  CONNECTED INPUTS
//      To visually connect inputs together
//  ----------------------------------------------------------------------------
.input-connect {
    padding: @su8 @su12;
    line-height: @lh-m;

    //  When we want the gray background
    &._fill {
        border: 1px solid @black-150;
        border-left-width: 0;
        border-right-width: 0;
        background-color: @bgc-lightest;
        color: @fc-medium;

        &.order-first {
            border-left-width: 1px;
        }
        &.order-last {
            border-right-width: 1px;
        }
    }

    //  If we want to connect a button that's last, don't round all the corners
    &.button.order-last {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    //  Make labels white-space
    .label {
        white-space: nowrap;
    }
}

//  --  FORM VALIDATION STATES
//      Validation states will need applied at the wrapping container level.
//  ----------------------------------------------------------------------------
.grid {
    //  --  WARNING
    &.has-warning {
        .input,
        .select > select {
            border-color: @yellow-600;

            &:focus {
                box-shadow: inset 0 0 4px @black-050, 0 0 0 @su4 fade(@yellow-500, 40%);
            }
        }

        .input-message {
            color: darken(desaturate(@yellow-600, 20%), 1%);
        }
    }

    //  --  ERROR
    &.has-error {
        .input,
        .select > select {
            border-color: @red-400;
            
            &:focus {
                box-shadow: inset 0 0 4px @black-050, 0 0 0 @su4 fade(@red-200, 40%);
            }
        }

        .input-message {
            color: @red-500;
        }
    }

    //  --  SUCCESS
    &.is-success {
        .input,
        .select select {
            border-color: @green-400;
            
            &:focus {
                box-shadow: inset 0 0 4px @black-050, 0 0 0 @su4 fade(@green-200, 40%);
            }
        }

        .input-message {
            color: darken(@green-500, 2%);
        }
    }

    //  --  DISABLED
    &.is-disabled {
        .o70;
        cursor: not-allowed;

        .select > select {
            &:before,
            &:after { .o30; }
        }
    }
}


//  $$  TEXTAREAS
//  ----------------------------------------------------------------------------
.input.textarea {
    .py12;
    height: auto;
    resize: vertical;
}

//  $$  SELECT MENUS
//  ----------------------------------------------------------------------------
.select {
    position: relative;

    //  --  MENU ARROWS
    //      To customize the visual appearance of the select menu arrows, we
    //      need to recreate them on the wrapping .select div.
    //  ------------------------------------------------------------------------
    &:before,
    &:after {
        content: "";
        position: absolute;
        right: @su12;
        pointer-events: none;

        border-width: 4px;
        border-style: solid;
        border-color: @black-700 transparent;
    }
    &:before {
        top: calc(~"50% - 5px");
        border-top-width: 0;
        border-bottom-width: 4px;
    }
    &:after {
        top: calc(~"50% + 1px");
        border-top-width: 4px;
        border-bottom-width: 0;
    }

    //  --  MENU
    //      Now we can style the visual appearance of the select menu;
    //  ------------------------------------------------------------------------
    > select {
        //  [1] Reset the appearance
        .appearance(none);

        //  [2] Update the styles
        padding: 0.8em 1em;
        padding-right: @su32;
        width: 100%;
        height: 100%; // Fill the height of its parent
        outline: 0;
        border-radius: @br-sm;
        border: 1px solid @black-200;
        background-color: @white;
        font-family: @ff-sans;
        line-height: 1;
    }
}

//  $$  FILE UPLOAD
//  ----------------------------------------------------------------------------
.input._file {
    display: block;
    margin: 0;
    padding: @su8 0;
    .mx-fs(@fs-fine);
}

//  $$  CHECKBOXES & RADIOS
//  ----------------------------------------------------------------------------
.checkbox,
.radio {
    //  [1]   Check to see if we can use custom styles, if so reset the defaults
    //  ------------------------------------------------------------------------
    @supports (appearance: none) or (-webkit-appearance: none) {
    .appearance(none);

    &::-ms-check {
        display: none;
    }

    //  [2]  Now re-style the checkboxes and radios
    //  ------------------------------------------------------------------------
    width: 1em;
    height: 1em;
    border: 1px solid @black-200;
    background-color: @white;
    outline: 0;
    cursor: pointer;
    vertical-align: middle;

    &:focus {
        outline: 0;
    }
  }
}

//  --   Checkboxes
//  ----------------------------------------------------------------------------
.checkbox {
    @supports (appearance: none) or (-webkit-appearance: none) {
        border-radius: @br-sm;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: contain;

        &:checked {
            border-color: @blue-500;
            background-color: @blue-500;
            background-image: url("data:image/svg+xml,%3Csvg width='11' height='11' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10 3.41L8.59 2 4 6.59 2.41 5 1 6.41l3 3z' fill='%23fff'/%3E%3C/svg%3E");

            &:focus {
                border-color: @blue-500;
            }
        }

        &:focus {
            border-color: @blue-300;
            box-shadow: 0 0 0 @su4 fade(@blue-500, 15%);
        }
    }
}

//  --   Radio Selects
//  ----------------------------------------------------------------------------
.radio {
    @supports (appearance: none) or (-webkit-appearance: none) {
        border-radius: @br-circle;

        &:checked {
            border-color: @blue-500;
            border-width: 0.30769231em;
            background-color: @white;
        }

        &:focus {
            box-shadow: 0 0 0 @su4 fade(@blue-500, 15%);
        }
    }
}


//  ============================================================================
//  $  LABELS
//  ============================================================================
.label {
    .mx-fs(@fs-body2);
    font-weight: 700;
    cursor: pointer;
}

//  $$  LABEL STATUS FLAG
//  ----------------------------------------------------------------------------
//      Is this form item required or optional? Flag the status for users.
//      Default styling is optional.
.label--status {
    font-size: 85%;
    font-style: italic;
    font-weight: 400;
    color: @fc-medium;

    &.label--status__required {
        color: @red-400;
    }
}

//  ============================================================================
//  $  TEXT STYLES
//  ============================================================================
.input-description {
    margin: 0 0 @su8;
    .mx-fs(@fs-caption);
    line-height: @lh-s;
    color: @fc-medium;
}

//  ============================================================================
//  $ OPTION TOGGLE
//  ----------------------------------------------------------------------------
.option-toggle {
    //  First hide the radio buttons
    .radio {
        position: absolute;
        left: -999em;
        .o0;
    }

    //  Next modifications to option cells
    .-option {
        margin-left: -1px;
        margin-right: -1px;

        //  Round the corners on the first and last elements
        &:first-of-type .label {
            .blr-sm;
        }
        &:last-of-type .label {
            .brr-sm;
        }
    }

    //  Style the base label
    .label {
        padding: @su8 @su12;
        border: 1px solid @black-075;
        background-color: @white;
        color: @fc-medium;
        transition: all 300ms @te-smooth;
        cursor: pointer;

        &:hover,
        &:active {
            color: @fc-dark;
            border-color: @black-150;
            box-shadow: 0 0 8px fade(@powder-600,25%);
            background-color: @powder-025;
            z-index: 1;
        }
    }

    //  If the label is selected, style it accordingly.
    .radio:checked + .label {
        z-index: 2;
        border-color: @powder-100;
        box-shadow: 0 0 8px fade(@powder-600,10%);
        background-color: @powder-100;
        color: @powder-700;

        &:hover,
        &:active {
            border-color: @powder-400;
            box-shadow: 0 0 8px fade(@powder-600,25%);
            background-color: darken(@powder-100,5%);
            color: @powder-800;
        }
    }

    //  $$  MODIFICATIONS
    //  --------------------------------------------------------------------------
    //  --  Primary
    //      When the toggle is the only one within a view and we want it to be
    //      visually dominating for the user.
    &._primary {
        .label:hover,
        .label:active {
            color: @blue-700;
            box-shadow: 0 0 8px fade(@blue-500,25%);
            background-color: @blue-050;
        }

        .radio:checked + .label {
            border-color: @blue-600;
            box-shadow: 0 0 8px fade(@blue-500,10%);
            background-color: @blue-500;
            color: @white;

            &:hover,
            &:active {
                border-color: @blue-700;
                box-shadow: 0 0 8px fade(@blue-500,25%);
                background-color: @blue-600;
                color: @blue-050;
            }
        }
    }

    //  --  Switch
    //      Used when the toggle represents an "on/off" choice for the user. A
    //      "off" state must be present to use this modifier.
    &._switch {
        .label:hover,
        .label:active {
            border: 1px solid @black-800;
            box-shadow: 0 0 8px fade(@black-600,25%);
            background-color: @bgc-lightest;
        }

        .radio:checked + .label {
            &:not(._off) {
                border-color: @green-400;
                box-shadow: 0 0 8px fade(@green-400,10%);
                background-color: @green-400;
                color: @white;

                &:hover,
                &:active {
                    border-color: @green-600;
                    box-shadow: 0 0 8px fade(@green-400,25%);
                    background-color: @green-500;
                    color: @green-050;
                }
            }

            //  When the off state is selected, we don't it green. We want it to be
            //  gray instead.
            &._off {
                border-color: @black-300;
                box-shadow: 0 0 8px fade(@black-800,10%);
                background-color: @bgc-light;
                color: @black-800;

                &:hover,
                &:active {
                    border-color: @black-400;
                    box-shadow: 0 0 8px fade(@black-800,25%);
                    background-color: @bgc-dark;
                    color: darken(@black-800,5%);
                }
            }
        }
    }
}

//  ============================================================================
//  $ Chosen plugin (JS plugin)
//  ----------------------------------------------------------------------------
.container .chosen-container {
    margin-top: 0;

    &.chosen-container-active {
        border-width: 0;
        .chosen-choices {
            border-color: @blue-600;
            box-shadow: inset 0 0 4px @black-050, 0 0 5px fade(@blue-500,50%);
        }
    }

    .chosen-choices {
        padding: 0 1px;
        min-height: 38px;
        background-image: none;
        border-radius: @br-md;
        border-color: @black-100;

        &:hover {
            border-color: fade(@blue-500,50%);
            box-shadow: inset 0 0 2px darken(@black-050,10%), 0 0 2px fade(fade(@blue-500,50%),20%);
        }
    }

    //  Restyle tags
    .chosen-choices {
        li.search-choice,
        li.search-field {
            display: inline-flex;
            .ai-center;
            margin: @su4 1px;
            padding: @su2 (@su4 + 2);
        }
        li.search-choice {
            float: none;
            box-shadow: none;
            background-image: none;

            font-family: @ff-sans;
            .mx-fs(@fs-caption);
            color: @powder-600;
            background-color: @powder-100;
            border-color: transparent;
            border-radius: @br-md;

            &:first-child { margin-left: 3px; }

            .search-choice-close {
                position: relative;
                top: 0;
                right: -1px;
                margin-left: @su4;
                transition: none;
            }
        }
    }
     li.search-field > input[type="text"] {
        padding: 0;
        margin: 0;
    }
}
